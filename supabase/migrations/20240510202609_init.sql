create extension if not exists "vector" with schema "public" version '0.5.1';

create table "public"."LLM Runs" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "email" character varying,
    "language" character varying,
    "problem" character varying,
    "company_info" character varying
);


alter table "public"."LLM Runs" enable row level security;

create table "public"."Ratings" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "rate" integer,
    "run_id" uuid not null default gen_random_uuid()
);


alter table "public"."Ratings" enable row level security;

create table "public"."documents" (
    "id" uuid not null,
    "content" text,
    "metadata" jsonb,
    "embedding" vector(1536)
);


CREATE UNIQUE INDEX "LLM Runs_pkey" ON public."LLM Runs" USING btree (id);

CREATE UNIQUE INDEX "Ratings_pkey" ON public."Ratings" USING btree (id);

CREATE UNIQUE INDEX documents_pkey ON public.documents USING btree (id);

alter table "public"."LLM Runs" add constraint "LLM Runs_pkey" PRIMARY KEY using index "LLM Runs_pkey";

alter table "public"."Ratings" add constraint "Ratings_pkey" PRIMARY KEY using index "Ratings_pkey";

alter table "public"."documents" add constraint "documents_pkey" PRIMARY KEY using index "documents_pkey";

alter table "public"."Ratings" add constraint "public_Ratings_run_id_fkey" FOREIGN KEY (run_id) REFERENCES "LLM Runs"(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."Ratings" validate constraint "public_Ratings_run_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.match_documents(query_embedding vector, filter jsonb DEFAULT '{}'::jsonb)
 RETURNS TABLE(id uuid, content text, metadata jsonb, similarity double precision)
 LANGUAGE plpgsql
AS $function$
#variable_conflict use_column
begin
  return query
  select
    id,
    content,
    metadata,
    1 - (documents.embedding <=> query_embedding) as similarity
  from documents
  where metadata @> filter
  order by documents.embedding <=> query_embedding;
end;
$function$
;

grant delete on table "public"."LLM Runs" to "anon";

grant insert on table "public"."LLM Runs" to "anon";

grant references on table "public"."LLM Runs" to "anon";

grant select on table "public"."LLM Runs" to "anon";

grant trigger on table "public"."LLM Runs" to "anon";

grant truncate on table "public"."LLM Runs" to "anon";

grant update on table "public"."LLM Runs" to "anon";

grant delete on table "public"."LLM Runs" to "authenticated";

grant insert on table "public"."LLM Runs" to "authenticated";

grant references on table "public"."LLM Runs" to "authenticated";

grant select on table "public"."LLM Runs" to "authenticated";

grant trigger on table "public"."LLM Runs" to "authenticated";

grant truncate on table "public"."LLM Runs" to "authenticated";

grant update on table "public"."LLM Runs" to "authenticated";

grant delete on table "public"."LLM Runs" to "service_role";

grant insert on table "public"."LLM Runs" to "service_role";

grant references on table "public"."LLM Runs" to "service_role";

grant select on table "public"."LLM Runs" to "service_role";

grant trigger on table "public"."LLM Runs" to "service_role";

grant truncate on table "public"."LLM Runs" to "service_role";

grant update on table "public"."LLM Runs" to "service_role";

grant delete on table "public"."Ratings" to "anon";

grant insert on table "public"."Ratings" to "anon";

grant references on table "public"."Ratings" to "anon";

grant select on table "public"."Ratings" to "anon";

grant trigger on table "public"."Ratings" to "anon";

grant truncate on table "public"."Ratings" to "anon";

grant update on table "public"."Ratings" to "anon";

grant delete on table "public"."Ratings" to "authenticated";

grant insert on table "public"."Ratings" to "authenticated";

grant references on table "public"."Ratings" to "authenticated";

grant select on table "public"."Ratings" to "authenticated";

grant trigger on table "public"."Ratings" to "authenticated";

grant truncate on table "public"."Ratings" to "authenticated";

grant update on table "public"."Ratings" to "authenticated";

grant delete on table "public"."Ratings" to "service_role";

grant insert on table "public"."Ratings" to "service_role";

grant references on table "public"."Ratings" to "service_role";

grant select on table "public"."Ratings" to "service_role";

grant trigger on table "public"."Ratings" to "service_role";

grant truncate on table "public"."Ratings" to "service_role";

grant update on table "public"."Ratings" to "service_role";

grant delete on table "public"."documents" to "anon";

grant insert on table "public"."documents" to "anon";

grant references on table "public"."documents" to "anon";

grant select on table "public"."documents" to "anon";

grant trigger on table "public"."documents" to "anon";

grant truncate on table "public"."documents" to "anon";

grant update on table "public"."documents" to "anon";

grant delete on table "public"."documents" to "authenticated";

grant insert on table "public"."documents" to "authenticated";

grant references on table "public"."documents" to "authenticated";

grant select on table "public"."documents" to "authenticated";

grant trigger on table "public"."documents" to "authenticated";

grant truncate on table "public"."documents" to "authenticated";

grant update on table "public"."documents" to "authenticated";

grant delete on table "public"."documents" to "service_role";

grant insert on table "public"."documents" to "service_role";

grant references on table "public"."documents" to "service_role";

grant select on table "public"."documents" to "service_role";

grant trigger on table "public"."documents" to "service_role";

grant truncate on table "public"."documents" to "service_role";

grant update on table "public"."documents" to "service_role";



